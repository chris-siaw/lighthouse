name: Lighthouse CI

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  lighthouse:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli

      - name: Generate and Format Timestamp for Report
        id: timestamp
        run: |
          TIMESTAMP=$(date +'%Y_%m_%d_%H_%M_%S')
          FORMATTED_DATE=$(date +'%Y/%m/%d')
          echo "timestamp=$TIMESTAMP" >> $GITHUB_ENV
          echo "formatted_date=$FORMATTED_DATE" >> $GITHUB_ENV

      - name: Run Lighthouse Audit
        run: |
          mkdir -p lighthouse-results
          lhci autorun --upload.target=filesystem --upload.outputDir=./lighthouse-results || echo "Lighthouse CI failed"

      - name: Rename Lighthouse Results Directory
        run: mv ./lighthouse-results ./lighthouse-results-${{ env.timestamp }}

      - name: Pull Existing Reports from GitHub Pages
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: reports

      - name: Prepare Reports Directory
        run: |
          mkdir -p reports
          mv ./lighthouse-results-${{ env.timestamp }} ./reports/${{ env.timestamp }}

      - name: Rename Lighthouse Report to index.html
        run: |
          cd ./reports/${{ env.timestamp }}
          mv *.report.html index.html

      - name: Extract Lighthouse Scores
        id: extract_scores
        run: |
          REPORT_FILE=$(ls ./reports/${{ env.timestamp }}/*.report.json)
          PERFORMANCE=$(jq '.categories.performance.score * 100' $REPORT_FILE)
          ACCESSIBILITY=$(jq '.categories.accessibility.score * 100' $REPORT_FILE)
          BEST_PRACTICES=$(jq '.categories["best-practices"].score * 100' $REPORT_FILE)
          SEO=$(jq '.categories.seo.score * 100' $REPORT_FILE)
          URL=$(jq -r '.finalUrl' $REPORT_FILE)

          echo "performance=$PERFORMANCE" >> $GITHUB_ENV
          echo "accessibility=$ACCESSIBILITY" >> $GITHUB_ENV
          echo "best_practices=$BEST_PRACTICES" >> $GITHUB_ENV
          echo "seo=$SEO" >> $GITHUB_ENV
          echo "url=$URL" >> $GITHUB_ENV

      - name: Update Summary Page
        run: |
          if [ ! -f reports/summary.html ]; then
            echo "<html><head><link rel='stylesheet' href='./style.css'></head><body><div class='container'>" > reports/summary.html
            echo "<h1>Lighthouse Report Summary</h1><table>" >> reports/summary.html
            echo "<tr><th>URL</th><th>Date</th><th>Performance</th><th>Accessibility</th><th>Best Practices</th><th>SEO</th></tr>" >> reports/summary.html
          fi
          echo "<tr>" >> reports/summary.html
          echo "<td><a href='./${{ env.timestamp }}/index.html'>${{ env.url }}</a></td>" >> reports/summary.html
          echo "<td>${{ env.formatted_date }}</td>" >> reports/summary.html
          echo "<td>${{ env.performance }}</td>" >> reports/summary.html
          echo "<td>${{ env.accessibility }}</td>" >> reports/summary.html
          echo "<td>${{ env.best_practices }}</td>" >> reports/summary.html
          echo "<td>${{ env.seo }}</td>" >> reports/summary.html
          echo "</tr>" >> reports/summary.html
          echo "</table></div></body></html>" >> reports/summary.html

      - name: Update Index Page
        run: |
          if [ ! -f reports/index.html ]; then
            echo "<html><head><link rel='stylesheet' href='./style.css'></head><body><div class='container'>" > reports/index.html
            echo "<h1>Lighthouse Reports</h1>" >> reports/index.html
          fi
          echo "<div class='card'><a href='./${{ env.timestamp }}/index.html'>Report ${{ env.timestamp }}</a></div>" >> reports/index.html
          if ! grep -q "summary.html" reports/index.html; then
            echo "<div class='card'><a href='./summary.html'>Summary of Lighthouse Scores</a></div>" >> reports/index.html
          fi
          echo "</div></body></html>" >> reports/index.html

      - name: Add Style CSS
        run: |
          mkdir -p reports
          cat <<EOF > reports/style.css
          body {
            font-family: 'Roboto', Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            color: #333;
          }

          h1 {
            font-size: 2.5rem;
            color: #4CAF50;
            text-align: center;
            margin: 20px 0;
          }

          .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
          }

          .card {
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin: 10px 0;
            padding: 20px;
            transition: transform 0.2s, box-shadow 0.2s;
          }

          .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
          }

          .card a {
            text-decoration: none;
            font-size: 1.2rem;
            color: #3f51b5;
            font-weight: bold;
          }

          .card a:hover {
            text-decoration: underline;
          }

          table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            background-color: #ffffff;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
          }

          table th, table td {
            padding: 12px;
            text-align: center;
          }

          table th {
            background-color: #4CAF50;
            color: #ffffff;
            font-weight: bold;
          }

          table tr:nth-child(even) {
            background-color: #f9f9f9;
          }

          table tr:hover {
            background-color: #e3f2fd;
          }

          table td {
            color: #333;
            font-size: 1rem;
          }

          table td a {
            color: #3f51b5;
            text-decoration: none;
          }

          table td a:hover {
            text-decoration: underline;
          }

          footer {
            text-align: center;
            margin: 20px 0;
            font-size: 0.9rem;
            color: #777;
          }

          @media (max-width: 768px) {
            h1 {
              font-size: 2rem;
            }

            table th, table td {
              font-size: 0.9rem;
              padding: 10px;
            }

            .card a {
              font-size: 1rem;
            }
          }
          EOF

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./reports
          publish_branch: gh-pages
