name: Lighthouse CI

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  lighthouse:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli

      - name: Generate and Format Timestamp for Report
        id: timestamp
        run: |
          TIMESTAMP=$(date +'%Y_%m_%d_%H_%M_%S')
          FORMATTED_DATE=$(date +'%Y/%m/%d')
          echo "timestamp=$TIMESTAMP" >> $GITHUB_ENV
          echo "formatted_date=$FORMATTED_DATE" >> $GITHUB_ENV

      - name: Run Lighthouse Audit
        run: |
          mkdir -p lighthouse-results
          lhci autorun --upload.target=filesystem --upload.outputDir=./lighthouse-results || echo "Lighthouse CI failed"

      - name: Rename Lighthouse Results Directory
        run: mv ./lighthouse-results ./lighthouse-results-${{ env.timestamp }}

      - name: Pull Existing Reports from GitHub Pages
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: reports

      - name: Prepare Reports Directory
        run: |
          mkdir -p reports
          mv ./lighthouse-results-${{ env.timestamp }} ./reports/${{ env.timestamp }}

      - name: Rename Lighthouse Report to index.html
        run: |
          cd ./reports/${{ env.timestamp }}
          mv *.report.html index.html

      - name: Extract Lighthouse Scores
        id: extract_scores
        run: |
          REPORT_FILE=$(ls ./reports/${{ env.timestamp }}/*.report.json)
          PERFORMANCE=$(jq '.categories.performance.score * 100' $REPORT_FILE)
          ACCESSIBILITY=$(jq '.categories.accessibility.score * 100' $REPORT_FILE)
          BEST_PRACTICES=$(jq '.categories["best-practices"].score * 100' $REPORT_FILE)
          SEO=$(jq '.categories.seo.score * 100' $REPORT_FILE)
          URL=$(jq -r '.finalUrl' $REPORT_FILE)

          echo "performance=$PERFORMANCE" >> $GITHUB_ENV
          echo "accessibility=$ACCESSIBILITY" >> $GITHUB_ENV
          echo "best_practices=$BEST_PRACTICES" >> $GITHUB_ENV
          echo "seo=$SEO" >> $GITHUB_ENV
          echo "url=$URL" >> $GITHUB_ENV

      - name: Update Main Page
        run: |
          # Create the file if it doesn't exist
          if [ ! -f reports/index.html ]; then
            echo "<html><head></head><body>" > reports/index.html
            echo "<h1>Lighthouse Report Summary</h1><table border='1' cellspacing='0' cellpadding='5'>" >> reports/index.html
            echo "<tr><th>Date</th><th>URL</th><th>Report Link</th><th>Performance</th><th>Accessibility</th><th>Best Practices</th><th>SEO</th></tr>" >> reports/index.html
          else
            # Extract existing rows
            awk '/<tr>/{flag=1} flag; /<\/table>/{flag=0}' reports/index.html > rows.temp
          fi

          # Start building the updated main page
          echo "<html><head></head><body>" > reports/index.html
          echo "<h1>Lighthouse Report Summary</h1><table border='1' cellspacing='0' cellpadding='5'>" >> reports/index.html
          echo "<tr><th>Date</th><th>URL</th><th>Report Link</th><th>Performance</th><th>Accessibility</th><th>Best Practices</th><th>SEO</th></tr>" >> reports/index.html

          # Add the new row for the current report at the top
          echo "<tr>" >> reports/index.html
          echo "<td>${{ env.formatted_date }}</td>" >> reports/index.html
          echo "<td><a href='${{ env.url }}' target='_blank'>${{ env.url }}</a></td>" >> reports/index.html
          echo "<td><a href='./${{ env.timestamp }}/index.html' target='_blank'>View Report</a></td>" >> reports/index.html
          echo "<td>${{ env.performance }}</td>" >> reports/index.html
          echo "<td>${{ env.accessibility }}</td>" >> reports/index.html
          echo "<td>${{ env.best_practices }}</td>" >> reports/index.html
          echo "<td>${{ env.seo }}</td>" >> reports/index.html
          echo "</tr>" >> reports/index.html

          # Add existing rows below
          if [ -f rows.temp ]; then
            cat rows.temp >> reports/index.html
          fi

          # Close the table and HTML
          echo "</table></body></html>" >> reports/index.html

          # Clean up temporary file
          if [ -f rows.temp ]; then
            rm rows.temp
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./reports
          publish_branch: gh-pages
